//
//  GFBBaseViewController.m
//  GFB
//
//  Created by bin xie on 2016/10/30.
//  Copyright © 2016年 Shanghai Aopai Data Technology Co., Ltd. All rights reserved.
//

#import "GFBBaseViewController.h"
#import "GFBNavigationViewController.h"
#import "AppDelegate.h"
#import "FKGPopOption.h"


@interface GFBBaseViewController ()

@property (nonatomic,strong) UIWebView   *phoneWebView;

@end

@implementation GFBBaseViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    //更改UINavigationBar背景颜色
    self.navigationController.navigationBar.barTintColor = MAIN_COLOR;
    
    //解决iOS 7.0导航栏遮盖视图问题 导航栏设置为不透明
    self.navigationController.navigationBar.translucent = NO;
    
    //设置视图控制器背景为白色
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    
    //隐藏返回按钮
    [self.navigationItem setHidesBackButton:YES];
    [[UINavigationBar appearance] setTintColor:[UIColor clearColor]];
    
    //添加返回按钮
    self.navLeftButton = [UIButton buttonWithType:UIButtonTypeCustom];
    self.navLeftButton.frame = CGRectMake(0, 0, 70, 44);
    [self.navLeftButton setContentMode:UIViewContentModeCenter];
    [self.navLeftButton setImage:[UIImage imageNamed:@"return"] forState:UIControlStateNormal];
    [self.navLeftButton setTitle:@"         " forState:UIControlStateNormal];
    self.navLeftButton.titleLabel.font = BUTTON_FONT;
    [self.navLeftButton setTitleColor:BUTTON_TITLE_COLOR forState:UIControlStateNormal];
    [self.navLeftButton addTarget:self action:@selector(navLeftButtonAction) forControlEvents:UIControlEventTouchUpInside];
    
    UIBarButtonItem *leftBarItem = [[UIBarButtonItem alloc] initWithCustomView:self.navLeftButton];
    UIBarButtonItem *negativeSpacer = [[UIBarButtonItem alloc]
                                       initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                       target:nil action:nil];
    
    /**
     *  width为负数时，相当于btn向右移动width数值个像素，由于按钮本身和边界间距为5pix，所以width设为-5时，间距正好调整
     *  为0；width为正数时，正好相反，相当于往左移动width数值个像素
     */
    negativeSpacer.width = -5;
    
    self.navigationItem.leftBarButtonItems = @[negativeSpacer, leftBarItem];
    
    //添加导航栏右按钮
    //背部 view
    UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 60, 44)];
    bgView.clipsToBounds = NO;
    self.navRightButton = [UIButton buttonWithType:UIButtonTypeCustom];
    self.navRightButton.frame = CGRectMake(0, 0, 60, 44);
    self.navRightButton.titleLabel.font = [UIFont systemFontOfSize:16];
    self.navRightButton.contentHorizontalAlignment = UIControlContentHorizontalAlignmentRight;
    [self.navRightButton addTarget:self action:@selector(navRightButtonAction) forControlEvents:UIControlEventTouchUpInside];
    
    [bgView addSubview:self.navRightButton];
    
    UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:bgView];
    UIBarButtonItem *rightNegativeSpacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    [self.navRightButton setTitleColor:BUTTON_TITLE_COLOR forState:UIControlStateNormal];
    [self.navRightButton setTitleColor:BUTTON_TITLE_COLOR forState:UIControlStateHighlighted];
    [self.navRightButton setImage:[UIImage imageNamed:@"Service"] forState:UIControlStateNormal];

    self.navigationItem.rightBarButtonItems = @[rightNegativeSpacer, rightBarItem];
    
    //添加导航栏标题
    self.navTitleLable = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, APPWIDTH - 70 * 2, 44)];
    self.navTitleLable.backgroundColor = [UIColor clearColor];
    self.navTitleLable.textAlignment = NSTextAlignmentCenter;
    self.navTitleLable.textColor = NAVIGATION_TITLE_COLOR;
    self.navTitleLable.font = NAVIGATION_TITLE_FONT;
    self.navigationItem.titleView = self.navTitleLable;
    self.navTitleLable.text = [self navigationTitle];
    
    [self initNavigationBar];
    
    [self checkRootViewController];
}


- (void)initNavigationBar
{
    
}

- (void)checkRootViewController
{
    UIViewController *firstViewController = self.navigationController.viewControllers.firstObject;
    
    if (firstViewController == self.navigationController.topViewController)
    {
        self.navLeftButton.hidden = YES;
    }
}

- (void)hiddenNavigationLeftButton
{
    self.navLeftButton.hidden = YES;
}

- (NSString *)navigationTitle
{
    return @"";
}

#pragma mark - UIButton事件响应
/**
 *  导航栏左按钮事件响应
 */
- (void)navLeftButtonAction
{
    if ([self.navigationController isKindOfClass:[GFBNavigationViewController class]])
    {
        [(GFBNavigationViewController *)self.navigationController popViewControllerAnimated:YES];
    }
    else
    {
        [self.navigationController popViewControllerAnimated:YES];
    }
}

/**
 *  导航栏右按钮事件响应
 */
- (void)navRightButtonAction
{
    
}


@end
