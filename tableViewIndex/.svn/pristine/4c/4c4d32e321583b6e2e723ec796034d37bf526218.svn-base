//
//  NSString+Categories.m
//  GFB
//
//  Created by 维信金科 on 16/9/20.
//  Copyright © 2016年 Vision Credit  Financial Technology Cpmpany Limited. All rights reserved.
//

#import "NSString+Categories.h"

@implementation NSString (Categories)

#pragma mark - 字符串校验处理
/**
 *  校验空字符串
 *
 *  @param string 需要校验的字符串
 *
 *  @return YES/NO
 */
+ (BOOL)checkStringEmpty:(NSString *)string{
    if ((NSNull *)string == [NSNull null]) {
        return YES;
    }
    if (string == nil || [string length] == 0) {
        return YES;
    } else if ([[string stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]] length] == 0) {
        return YES;
    }
    return NO;
    
}

/**
 *  校验手机号码是否合法 
 *
 *  @return YES/NO
 */
- (BOOL)isMobileNum{
    if ([NSString checkStringEmpty:self]) {
        return NO;
    }
    
    /**
     * 手机号码
     * 移动：134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188
     * 联通：130,131,132,152,155,156,185,186
     * 电信：133,1349,153,180,189
     */
    NSString *MOBILE = @"^1(3[0-9]|5[0-35-9]|8[025-9])\\d{8}$";
    
    NSPredicate *regextestmobile = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", MOBILE];
    
    if ([regextestmobile evaluateWithObject:self]) {
        return YES;
    } else {
        return NO;
    }
}

/**
 *  校验电话号码是否合法
 *
 *  @return YES/NO
 */
- (BOOL)checkTelPhoneNum{
    if ([NSString checkStringEmpty:self]) {
        return NO;
    }
    
    NSString *telPhone = @"^(0[0-9]{2,3})?([2-9][0-9]{6,7})+(\\-[0-9]{1,4})?$|(^400[0-9]{7}$)";
    
    NSPredicate *regextestphone = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", telPhone];
    
    if ([regextestphone evaluateWithObject:self]) {
        return YES;
    } else {
        return NO;
    }
}

/**
 *  校验email地址是否合法
 *
 *  @return YES/NO
 */
- (BOOL)checkValidateEmail{
    if ([NSString checkStringEmpty:self]) {
        return NO;
    }
    
    NSString *emailRegex = @"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}";
    NSPredicate *emailTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", emailRegex];
    return [emailTest evaluateWithObject:self];
}

/**
 *  校验密码是否合法
 *
 *  @return YES/NO
 */
- (BOOL)checkPasswordText
{
    if ([NSString checkStringEmpty:self])
    {
        return NO;
    }
    
    NSString *password = @"^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$";
    NSPredicate *passwordInput = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", password];
    return [passwordInput evaluateWithObject:self];
}


/**
 *  获取字符长度 (非 string.length)
 *
 *  @return 字符个数
 */
- (NSInteger)byteLength {
    NSUInteger len = self.length;
    // 汉字字符集
    NSString* pattern = @"[\u4e00-\u9fa5]";
    NSRegularExpression* regex = [NSRegularExpression regularExpressionWithPattern:pattern options:NSRegularExpressionCaseInsensitive error:nil];
    // 计算中文字符的个数
    NSInteger numMatch = [regex numberOfMatchesInString:self options:NSMatchingReportProgress range:NSMakeRange(0, len)];
    return len + numMatch;
}


/** 返回自适应高度的文本 */

+ (CGSize)sizeWithString:(NSString *)string font:(CGFloat)font maxWidth:(CGFloat)maxWidth

{
    
    NSDictionary *attributesDict = @{NSFontAttributeName:[UIFont systemFontOfSize:font]};
    
    CGSize maxSize = CGSizeMake(maxWidth, MAXFLOAT);
    
    CGRect subviewRect = [string boundingRectWithSize:maxSize options:NSStringDrawingUsesLineFragmentOrigin attributes:attributesDict context:nil];
    
    return subviewRect.size;
    
}



/** 返回自适应宽度的文本 */

+ (CGSize)sizeWithString:(NSString *)string font:(CGFloat)font maxHeight:(CGFloat)maxHeight

{
    
    NSDictionary *attributesDict = @{NSFontAttributeName:[UIFont systemFontOfSize:font]};
    
    CGSize maxSize = CGSizeMake(MAXFLOAT, maxHeight);
    
    CGRect subviewRect = [string boundingRectWithSize:maxSize options:NSStringDrawingUsesLineFragmentOrigin attributes:attributesDict context:nil];
    
    return subviewRect.size;
    
}


//字符串格式化 格式如：¥2,000.00
+ (NSString *)formatCardNumberStr1:(NSString *)cardNumStr
{
    NSNumber *number = [NSNumber numberWithInteger:[cardNumStr integerValue]];
    NSNumberFormatter *formatter = [[NSNumberFormatter alloc]init];
    
    formatter.numberStyle =kCFNumberFormatterCurrencyStyle; // 2,000.00
    
    NSString *newAmount = [formatter stringFromNumber:number];
    
    return newAmount;
}


//字符串格式化 格式如： 2,000.00
+ (NSString *)formatCardNumberStr2:(NSString *)cardNumStr
{
    NSNumber *number = [NSNumber numberWithInteger:[cardNumStr integerValue]];
    NSNumberFormatter *formatter = [[NSNumberFormatter alloc]init];
    
    formatter.numberStyle =kCFNumberFormatterDecimalStyle; // 2,000

    NSString *newAmount = [formatter stringFromNumber:number];
    newAmount = [NSString stringWithFormat:@"%@.00",newAmount];
    
    return newAmount;
}


//字符串格式化 格式如： 2000
+ (NSString *)formatCardNumberStr3:(NSString *)cardNumStr
{
    if (cardNumStr.length != 0) {
        cardNumStr = [cardNumStr substringToIndex:cardNumStr.length - 3];
        //将字符中的逗号改为空
        cardNumStr = [cardNumStr stringByReplacingOccurrencesOfString:@"," withString:@""];
    }
    
    return cardNumStr;
}

@end
