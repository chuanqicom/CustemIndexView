//
//  AVCaptureSessionVC.m
//  AVCaptureSession--demo
//
//  Created by SLASH on 15/11/23.
//  Copyright © 2015年 SLASH. All rights reserved.
//


#define kWidth [[UIScreen mainScreen] bounds].size.width
#define kHeight [[UIScreen mainScreen] bounds].size.height

#import "AVCaptureSessionVC.h"

@interface AVCaptureSessionVC ()

{
    NSString     *_imageName;
    UIView       *_preView;
    UIImage      *_image;
    UIImageView  *_imgv;
}

@end

@implementation AVCaptureSessionVC

- (void)viewDidLoad
{
    [super viewDidLoad];
    _cameraShowView = [[UIView alloc] initWithFrame:CGRectMake(0, 64, kWidth, kHeight-164)];
    [self.view addSubview:_cameraShowView];
    [self addBoxViewWithImageName:_imageName];
    self.navigationController.navigationBarHidden = YES;
    
    [self confifToggleButton];
    [self configShutterButton];
    [self createCancelButton];
    [self initialSession];
    self.view.backgroundColor = [UIColor blackColor];
}

- (void)createCancelButton
{
    UIButton *cancel = [UIButton buttonWithType:UIButtonTypeCustom];
    [cancel setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [cancel setTitle:@"取消" forState:UIControlStateNormal];
    cancel.frame = CGRectMake(40, kHeight - 70, 80, 40);
    [cancel addTarget:self action:@selector(cancelAction) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:cancel];
}

//KKIDFront  = 1,//身份证正面
//KKIDBack   = 2,//身份证背面
//KKIDInHand = 3,//手持身份证

- (void)setPictureKind:(PictureKind)pictureKind
{
    _pictureKind = pictureKind;
    _imageName = [NSString string];
    switch (_pictureKind)
    {
        case KKIDFront:
        {
            _imageName = @"img_facade";
        }
            break;
        case KKIDBack:
        {
            _imageName = @"img_obverse";
        }
            break;
        case KKIDInHand:
        {
            _imageName = @"img_holding";
        }
            break;
    }
}

- (void)addBoxViewWithImageName:(NSString *)imageName
{
    UIImageView *boxView = [[UIImageView alloc] initWithFrame:CGRectMake(35, 20, _cameraShowView.frame.size.width - 70, _cameraShowView.frame.size.height - 40)];
    boxView.image = [UIImage imageNamed:imageName];
    [_cameraShowView addSubview:boxView];
}

- (void)confifToggleButton
{
    _toggleButton = [UIButton buttonWithType:UIButtonTypeCustom];
    _toggleButton.frame = CGRectMake(kWidth - 40, 30, 30, 24);
    [_toggleButton setBackgroundImage:[UIImage imageNamed:@"icon_reversal"] forState:UIControlStateNormal];
    [_toggleButton addTarget:self action:@selector(toggleCamera) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:_toggleButton];
}

- (void)configShutterButton
{
    _shutterButton = [UIButton buttonWithType:UIButtonTypeCustom];
    _shutterButton.frame = CGRectMake(kWidth/2 - 30, kHeight-80, 60, 60);
    [_shutterButton setBackgroundImage:[UIImage imageNamed:@"btn_photo"] forState:UIControlStateNormal];
    [_shutterButton addTarget:self action:@selector(shutterCamera) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:_shutterButton];
}


- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    NSString *mediaType = AVMediaTypeVideo;
    
    AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:mediaType];
    
    if(authStatus == AVAuthorizationStatusRestricted || authStatus == AVAuthorizationStatusDenied)
    {
//     [DDAlertView showOnView:self.view withTitle:@"" Msg:@"请在iphone的“设置-隐私-相机”选项中，允许豆豆钱访问你的相机"];
        return;
    }
    [self setUpCameraLayer];
}

#pragma mark - 启动session
- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    if (self.session)
    {
        [self.session startRunning];
    }
}

#pragma mark - 关闭session
- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear: animated];
    
    if (self.session)
    {
        [self.session stopRunning];
    }
}

#pragma mark - 初始化session

- (void)initialSession

{
    //这个方法的执行我放在init方法里了
    self.session = [[AVCaptureSession alloc] init];
    AVCaptureDevice *device;
    
    if (_pictureKind == KKIDInHand)
    {
        device = [self frontCamera];
    }
    else
    {
        device = [self backCamera];
    }
    self.videoInput = [[AVCaptureDeviceInput alloc] initWithDevice:device error:nil];
    
    //[self fronCamera]方法会返回一个AVCaptureDevice对象，因为我初始化时是采用前摄像头，所以这么写，具体的实现方法后面会介绍
    self.stillImageOutput = [[AVCaptureStillImageOutput alloc] init];
    
    NSDictionary * outputSettings = [[NSDictionary alloc] initWithObjectsAndKeys:AVVideoCodecJPEG,AVVideoCodecKey, nil];
    
    //这是输出流的设置参数AVVideoCodecJPEG参数表示以JPEG的图片格式输出图片
    [self.stillImageOutput setOutputSettings:outputSettings];
    
    if ([self.session canAddInput:self.videoInput])
    {
        [self.session addInput:self.videoInput];
    }
    
    if ([self.session canAddOutput:self.stillImageOutput])
    {
        [self.session addOutput:self.stillImageOutput];
    }
}

#pragma mark - 这是获取前后摄像头对象的方法
- (AVCaptureDevice *)frontCamera
{
    return [self cameraWithPosition:AVCaptureDevicePositionFront];
}


- (AVCaptureDevice *)backCamera
{
    return [self cameraWithPosition:AVCaptureDevicePositionBack];
}


- (AVCaptureDevice *)cameraWithPosition:(AVCaptureDevicePosition) position
{
    NSArray *devices = [AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo];
    
    for (AVCaptureDevice *device in devices)
    {
        if ([device position] == position)
        {
            return device;
        }
    }
    
    return nil;
}

#pragma mark - 加载预览图层的方法

- (void)setUpCameraLayer
{
    if (self.previewLayer == nil)
    {
        self.previewLayer = [[AVCaptureVideoPreviewLayer alloc] initWithSession:self.session];
        UIView * view = self.cameraShowView;
        CALayer * viewLayer = [view layer];
        [viewLayer setMasksToBounds:YES];
        CGRect bounds = [view bounds];
        [self.previewLayer setFrame:bounds];
        [self.previewLayer setVideoGravity:AVLayerVideoGravityResizeAspectFill];
        [viewLayer insertSublayer:self.previewLayer below:[[viewLayer sublayers] objectAtIndex:0]];
    }
}

#pragma mark - 切换摄像头
- (void)toggleCamera
{
    NSUInteger cameraCount = [[AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo] count];
    
    if (cameraCount > 1)
    {
        NSError *error;
        
        AVCaptureDeviceInput *newVideoInput;
        
        AVCaptureDevicePosition position = [[_videoInput device] position];
        
        if (position == AVCaptureDevicePositionBack)
        {
            newVideoInput = [[AVCaptureDeviceInput alloc] initWithDevice:[self frontCamera] error:&error];
        }
        else if (position == AVCaptureDevicePositionFront)
        {
            newVideoInput = [[AVCaptureDeviceInput alloc] initWithDevice:[self backCamera] error:&error];
        }
        else
        {
            return;
        }
        
        if (newVideoInput != nil)
        {
            [self.session beginConfiguration];
            
            [self.session removeInput:self.videoInput];
            
            if ([self.session canAddInput:newVideoInput])
            {
                [self.session addInput:newVideoInput];
                
                [self setVideoInput:newVideoInput];
                
            }
            else
            {
                [self.session addInput:self.videoInput];
            }
            [self.session commitConfiguration];
        }
        else if (error)
        {
//            NSLog(@"toggle carema failed, error = %@", error);
        }
    }
}

#pragma mark - 拍照

- (void)shutterCamera
{
    AVCaptureConnection * videoConnection = [self.stillImageOutput connectionWithMediaType:AVMediaTypeVideo];
    if (!videoConnection)
    {
//        NSLog(@"take photo failed!");
        return;
    }
    
    [self.stillImageOutput captureStillImageAsynchronouslyFromConnection:videoConnection completionHandler:^(CMSampleBufferRef imageDataSampleBuffer, NSError *error) {
        
        if (imageDataSampleBuffer == NULL)
        {
            return;
        }
        
        NSData * imageData = [AVCaptureStillImageOutput jpegStillImageNSDataRepresentation:imageDataSampleBuffer];
        UIImage * image = [UIImage imageWithData:imageData];
        [self thePhotoPreview:image];
//        NSLog(@"image size = %@",NSStringFromCGSize(image.size));
    }];
}

#pragma mark - 照片预览
- (void)thePhotoPreview:(UIImage *)image
{
    _image = image;
    
    if (_preView == nil)
    {
        _preView = [[UIView alloc] initWithFrame:CGRectMake(0, 20, kWidth, kHeight-20)];
        _imgv = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, kWidth, kHeight-20)];
        [_preView addSubview:_imgv];
        _imgv.layer.masksToBounds = YES;
        _imgv.contentMode = UIViewContentModeScaleToFill;
        [self addToolBar];
    }
    _imgv.image = image;
    
    [self.view addSubview:_preView];
}

- (void)addToolBar
{
    UIView *topBar = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kWidth, 44)];
    topBar.backgroundColor = [UIColor blackColor];
    [_preView addSubview:topBar];
    
    UIView *buttomBar = [[UIView alloc] initWithFrame:CGRectMake(0, kHeight - 100, kWidth, 100)];
    [_preView addSubview:buttomBar];
    buttomBar.backgroundColor = [UIColor blackColor];
    //    toolBar.alpha = 0.5;
    [self addButtonBySuperView:buttomBar];
}

- (void)addButtonBySuperView:(UIView *)superView
{
    UIButton *chongPai = [UIButton buttonWithType:UIButtonTypeCustom];
    [chongPai setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [chongPai setTitle:@"重拍" forState:UIControlStateNormal];
    chongPai.frame = CGRectMake(40, 30, 80, 40);
    [chongPai addTarget:self action:@selector(chongPaiAction) forControlEvents:UIControlEventTouchUpInside];
    [superView addSubview:chongPai];
    
    UIButton *userPhoto = [UIButton buttonWithType:UIButtonTypeCustom];
    [userPhoto setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [userPhoto setTitle:@"确定" forState:UIControlStateNormal];
    userPhoto.frame = CGRectMake(kWidth-120, 30, 80, 40);
    [userPhoto addTarget:self action:@selector(usePhotoAction) forControlEvents:UIControlEventTouchUpInside];
    [superView addSubview:userPhoto];
}

- (void)chongPaiAction
{
    [_preView removeFromSuperview];
}


- (void)usePhotoAction
{
    NSData *imageData = UIImageJPEGRepresentation(_image,0.5);
    
    if (self.delegate)
    {
        if ([self.delegate respondsToSelector:@selector(useImageData:)])
        {
            [self.delegate useImageData:imageData];
        }
    }
    
    [self dismissViewControllerAnimated:YES completion:nil];
   
}

- (void)cancelAction
{
    [self dismissViewControllerAnimated:YES completion:nil];
}

@end
